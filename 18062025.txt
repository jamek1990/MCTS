import os
import zipfile
import pandas as pd
from bs4 import BeautifulSoup
import glob

def extract_table_data(html_content):
    soup = BeautifulSoup(html_content, 'html.parser')
    table = soup.find('table')
    
    data = {}
    rows = table.find_all('tr')
    
    for row in rows:
        cells = row.find_all('td')
        if len(cells) >= 2:
            key = cells[0].get_text(strip=True)
            value = cells[1].get_text(strip=True)
            data[key] = value
    
    return data

def extract_message_text(html_content):
    soup = BeautifulSoup(html_content, 'html.parser')
    table = soup.find('table')
    
    if table:
        text_after_table = table.find_next_sibling(string=True)
        if text_after_table:
            return text_after_table.strip()
    
    text_content = soup.get_text()
    lines = text_content.split('\n')
    
    for i, line in enumerate(lines):
        if 'Status dostarczenia' in line and i + 1 < len(lines):
            return lines[i + 1].strip()
    
    return ""

def read_txt_file(txt_content):
    return txt_content.strip()

def process_zip_file(zip_path):
    with zipfile.ZipFile(zip_path, 'r') as zip_ref:
        file_list = zip_ref.namelist()
        
        html_file = next((f for f in file_list if f.endswith('.html')), None)
        txt_file = next((f for f in file_list if f.endswith('.txt')), None)
        
        data = {}
        
        if html_file:
            html_content = zip_ref.read(html_file).decode('utf-8')
            table_data = extract_table_data(html_content)
            message_text = extract_message_text(html_content)
            
            data.update(table_data)
            data['Wiadomość HTML'] = message_text
        
        if txt_file:
            txt_content = zip_ref.read(txt_file).decode('utf-8')
            data['Wiadomość TXT'] = read_txt_file(txt_content)
        
        return data

def process_all_zip_files(folder_path):
    zip_files = glob.glob(os.path.join(folder_path, '*.zip'))
    all_data = []
    
    for zip_file in zip_files:
        data = process_zip_file(zip_file)
        data['Plik źródłowy'] = os.path.basename(zip_file)
        all_data.append(data)
    
    return all_data

def create_excel_file(data, output_path):
    df = pd.DataFrame(data)
    
    columns_order = ['Plik źródłowy', 'Typ', 'Nadawca', 'Odbiorca', 
                    'Czas wysłania', 'Czas dostarczenia', 'Status dostarczenia',
                    'Wiadomość HTML', 'Wiadomość TXT']
    
    existing_columns = [col for col in columns_order if col in df.columns]
    df = df[existing_columns]
    
    df.to_excel(output_path, index=False)

def main():
    folder_path = input("Podaj ścieżkę do folderu z plikami ZIP: ")
    output_path = input("Podaj ścieżkę do pliku Excel (np. output.xlsx): ")
    
    data = process_all_zip_files(folder_path)
    create_excel_file(data, output_path)
    
    print(f"Przetworzono {len(data)} plików ZIP")
    print(f"Dane zapisano do: {output_path}")

if __name__ == "__main__":
    main()

    
